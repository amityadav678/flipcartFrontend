{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91788\\\\Desktop\\\\flipcart\\\\frontend\\\\src\\\\Componants\\\\DetailView\\\\ProductDetailView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n// import ProductLeftView from '../DetailView/ProductLeftView';\nimport ProductLeftView from './productLeftView';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductDetailsView = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Call the function to fetch products\n    handleGetProducts();\n  }, [id]);\n  const handleGetProducts = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/product/${id}`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const products = await response.json();\n      setProducts(products);\n      console.log('Products fetched successfully:', products);\n    } catch (error) {\n      console.error('There was a problem with the fetch request:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        height: '550px',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ProductDetailsView, \"Vwc7Yr11ozEDAqBajHccrIUBH1o=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetailsView;\nexport default ProductDetailsView;\nvar _c;\n$RefreshReg$(_c, \"ProductDetailsView\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","ProductLeftView","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductDetailsView","_s","id","products","setProducts","handleGetProducts","response","fetch","method","headers","Accept","ok","Error","json","console","log","error","children","Row","style","height","color","Col","lg","md","sm","xs","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91788/Desktop/flipcart/frontend/src/Componants/DetailView/ProductDetailView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n// import ProductLeftView from '../DetailView/ProductLeftView';\r\nimport ProductLeftView from './productLeftView';\r\n\r\nconst ProductDetailsView = () => {\r\n    const { id } = useParams();\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Call the function to fetch products\r\n        handleGetProducts();\r\n    }, [id]);\r\n\r\n    const handleGetProducts = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:3000/product/${id}`,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const products = await response.json();\r\n            setProducts(products);\r\n            console.log('Products fetched successfully:', products);\r\n        } catch (error) {\r\n            console.error('There was a problem with the fetch request:', error);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Row style={{ height: '550px', color: 'white' }}>\r\n                <Col lg={6} md={6} sm={12} xs={12}></Col>\r\n                <Col lg={6} md={6} sm={12} xs={12}></Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductDetailsView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD;AACA,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE1B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACAc,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,MAAMG,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,iCAAiCL,EAAE,EAAE,EACrC;QACIM,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACLC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QACpB;MACJ,CACJ,CAAC;MAED,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMT,QAAQ,GAAG,MAAMG,QAAQ,CAACO,IAAI,CAAC,CAAC;MACtCT,WAAW,CAACD,QAAQ,CAAC;MACrBW,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEZ,QAAQ,CAAC;IAC3D,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACvE;EACJ,CAAC;EACD,oBACInB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACIpB,OAAA,CAACqB,GAAG;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAJ,QAAA,gBAC5CpB,OAAA,CAACyB,GAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzCjC,OAAA,CAACyB,GAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC,gBACR,CAAC;AAEX,CAAC;AAAC7B,EAAA,CAzCID,kBAAkB;EAAA,QACLN,SAAS;AAAA;AAAAqC,EAAA,GADtB/B,kBAAkB;AA2CxB,eAAeA,kBAAkB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}