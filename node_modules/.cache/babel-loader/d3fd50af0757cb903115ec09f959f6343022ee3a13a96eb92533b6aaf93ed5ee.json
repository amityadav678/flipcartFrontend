{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91788\\\\Desktop\\\\flipcart\\\\frontend\\\\src\\\\Componants\\\\Home\\\\Slider\\\\productSlider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport { bannerData } from '../../../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductSlider = () => {\n  _s();\n  const responsive = {\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 5\n    },\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 464\n      },\n      items: 2\n    },\n    mobile: {\n      breakpoint: {\n        max: 464,\n        min: 0\n      },\n      items: 1\n    }\n  };\n  useEffect(() => {\n    // Call the function to fetch products\n    handleGetProducts();\n  }, []);\n  const [products, setProducts] = useState([]);\n  const sbiimg = 'https://rukminim2.flixcart.com/fk-p-flap/1000/90/image/606a19936b528d9d.jpg?q=20';\n  const handleGetProducts = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/products', {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const products = await response.json();\n      setProducts(products);\n      console.log('Products fetched successfully:', products);\n    } catch (error) {\n      console.error('There was a problem with the fetch request:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Carousel, {\n      className: \"carouselContainer\",\n      responsive: responsive,\n      autoPlay: true,\n      autoPlaySpeed: 3000,\n      infinite: true,\n      children: products.map((e, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        // Ensures unique keys for each element\n        src: e.url,\n        alt: `Banner ${index + 1}` // Provides an alt attribute for accessibility\n        ,\n        style: {\n          width: '100%',\n          height: 'auto'\n        } // Ensures images are responsive\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductSlider, \"J7LvxSbZYWr+1ucW5Oku0To2o30=\");\n_c = ProductSlider;\nexport default ProductSlider;\nvar _c;\n$RefreshReg$(_c, \"ProductSlider\");","map":{"version":3,"names":["React","useEffect","useState","Carousel","bannerData","jsxDEV","_jsxDEV","ProductSlider","_s","responsive","desktop","breakpoint","max","min","items","tablet","mobile","handleGetProducts","products","setProducts","sbiimg","response","fetch","method","headers","Accept","ok","Error","json","console","log","error","children","className","autoPlay","autoPlaySpeed","infinite","map","e","index","src","url","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91788/Desktop/flipcart/frontend/src/Componants/Home/Slider/productSlider.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { bannerData } from '../../../data';\r\n\r\nconst ProductSlider = () => {\r\n    const responsive = {\r\n        desktop: {\r\n            breakpoint: { max: 3000, min: 1024 },\r\n            items: 5,\r\n        },\r\n        tablet: {\r\n            breakpoint: { max: 1024, min: 464 },\r\n            items: 2,\r\n        },\r\n        mobile: {\r\n            breakpoint: { max: 464, min: 0 },\r\n            items: 1,\r\n        },\r\n    };\r\n    useEffect(() => {\r\n        // Call the function to fetch products\r\n        handleGetProducts();\r\n    }, []);\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const sbiimg =\r\n        'https://rukminim2.flixcart.com/fk-p-flap/1000/90/image/606a19936b528d9d.jpg?q=20';\r\n\r\n    const handleGetProducts = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/products', {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const products = await response.json();\r\n            setProducts(products);\r\n            console.log('Products fetched successfully:', products);\r\n        } catch (error) {\r\n            console.error('There was a problem with the fetch request:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Carousel\r\n                className=\"carouselContainer\"\r\n                responsive={responsive}\r\n                autoPlay={true}\r\n                autoPlaySpeed={3000}\r\n                infinite={true}\r\n            >\r\n                {products.map((e, index) => (\r\n                    <img\r\n                        key={index} // Ensures unique keys for each element\r\n                        src={e.url}\r\n                        alt={`Banner ${index + 1}`} // Provides an alt attribute for accessibility\r\n                        style={{ width: '100%', height: 'auto' }} // Ensures images are responsive\r\n                    />\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductSlider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,qCAAqC;AAC5C,SAASC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,UAAU,GAAG;IACfC,OAAO,EAAE;MACLC,UAAU,EAAE;QAAEC,GAAG,EAAE,IAAI;QAAEC,GAAG,EAAE;MAAK,CAAC;MACpCC,KAAK,EAAE;IACX,CAAC;IACDC,MAAM,EAAE;MACJJ,UAAU,EAAE;QAAEC,GAAG,EAAE,IAAI;QAAEC,GAAG,EAAE;MAAI,CAAC;MACnCC,KAAK,EAAE;IACX,CAAC;IACDE,MAAM,EAAE;MACJL,UAAU,EAAE;QAAEC,GAAG,EAAE,GAAG;QAAEC,GAAG,EAAE;MAAE,CAAC;MAChCC,KAAK,EAAE;IACX;EACJ,CAAC;EACDb,SAAS,CAAC,MAAM;IACZ;IACAgB,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMkB,MAAM,GACR,kFAAkF;EAEtF,MAAMH,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC3DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACLC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MAEA,MAAMT,QAAQ,GAAG,MAAMG,QAAQ,CAACO,IAAI,CAAC,CAAC;MACtCT,WAAW,CAACD,QAAQ,CAAC;MACrBW,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEZ,QAAQ,CAAC;IAC3D,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACvE;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAA0B,QAAA,eACI1B,OAAA,CAACH,QAAQ;MACL8B,SAAS,EAAC,mBAAmB;MAC7BxB,UAAU,EAAEA,UAAW;MACvByB,QAAQ,EAAE,IAAK;MACfC,aAAa,EAAE,IAAK;MACpBC,QAAQ,EAAE,IAAK;MAAAJ,QAAA,EAEdd,QAAQ,CAACmB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACnBjC,OAAA;QACgB;QACZkC,GAAG,EAAEF,CAAC,CAACG,GAAI;QACXC,GAAG,EAAE,UAAUH,KAAK,GAAG,CAAC,EAAG,CAAC;QAAA;QAC5BI,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO,CAAE,CAAC;MAAA,GAHrCN,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd,CAAC;AAACzC,EAAA,CAlEID,aAAa;AAAA2C,EAAA,GAAb3C,aAAa;AAoEnB,eAAeA,aAAa;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}